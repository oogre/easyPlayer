#!/usr/bin/env node

/*----------------------------------------*\
  startVideoPlayer - startVideoPlayer.js
  @author Evrard Vincent (vincent@ogre.be)
  @Date:   2020-12-13 17:24:39
  @Last Modified time: 2021-10-06 15:17:18
\*----------------------------------------*/
"use strict";

var _child_process = require("child_process");

var _commander = require("commander");

var _tools = require("./tools.js");

var _Constants = require("./Constants.js");

process.title = "easyPlayer";

_commander.program.option('-v, --verbose <verbose>', 'verbose', false).action(async ({
  verbose
}) => {
  try {
    await (0, _tools.run)([_Constants.MOUNT_PATH], {}, verbose);
    await new Promise(resolve => setTimeout(resolve, 5000));
    let [type, path, filename] = await (0, _tools.getProcessType)(_Constants.DATA_DIR, _Constants.ProcessType);

    switch (type) {
      case _Constants.ProcessType.DUAL_SCREEN_MASTER:
        {
          console.log("DUAL_SCREEN_MASTER");
          (0, _tools.run)([_Constants.OMX_SYNC_PATH, `-muv`, filename], {
            cwd: path
          }, verbose);
        }
        break;

      case _Constants.ProcessType.DUAL_SCREEN_SLAVE:
        {
          console.log("DUAL_SCREEN_SLAVE");
          (0, _tools.run)([_Constants.OMX_SYNC_PATH, `-luv`, filename], {
            cwd: path
          }, verbose);
        }
        break;

      case _Constants.ProcessType.SINGLE_SCREEN:
        {
          console.log("SINGLE_SCREEN");
          (0, _tools.run)([_Constants.PLAY_PATH, filename], {
            cwd: path
          }, verbose);
        }
        break;

      case _Constants.ProcessType.AUDIO:
        {
          console.log("AUDIO");
          (0, _tools.run)([_Constants.PLAY_PATH, `--vol 3000`, filename], {
            cwd: path
          }, verbose);
        }
        break;

      default:
        console.log("Unknow type");
        break;
    }
  } catch (error) {
    console.log(error);
  }
});

_commander.program.parse(process.argv);